---
export interface ArtworkFrontmatter {
    title: string;
    date: string;
    image: string;
    pages?: string[];
    tags: string[];
}

export interface Props {
    frontmatter: ArtworkFrontmatter;
}

import Layout from "./Layout.astro";
import type { MarkdownInstance } from "astro";
import path from 'path';


const {frontmatter} = Astro.props;

// OGP用の画像パス
const ext = path.extname(frontmatter.image);
const basename = path.basename(frontmatter.image, ext);
const ogImage = `/ogp/${basename}_ogp${ext}`;

// OGP用のURL
const ogUrl = Astro.url.pathname;

// 全作品を読み込んで日付順にソート
const allPosts: MarkdownInstance<Record<string, any>>[] = Object.values(
  import.meta.glob("../pages/picture/*.md", { eager: true })
);

const sortedPosts = allPosts.sort((a, b) => {
  return new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime();
});

// 現在の作品のインデックスを見つける
const currentIndex = sortedPosts.findIndex(
  (post) => post.frontmatter.title === frontmatter.title && post.frontmatter.date === frontmatter.date
);

// 前後の作品を取得
const prevPost = currentIndex > 0 ? sortedPosts[currentIndex - 1] : null;
const nextPost = currentIndex < sortedPosts.length - 1 ? sortedPosts[currentIndex + 1] : null;

// URLから番号を抽出する関数
const getNumberFromUrl = (url: string | undefined) => {
  if (!url) return '';
  const match = url.match(/\/picture\/(\d+)/);
  return match ? match[1] : '';
};
---

<Layout title={frontmatter.title} image={ogImage} url={ogUrl}>
    <div class="artwork-navigation">
        {prevPost && (
            <a href={prevPost.url}>← {getNumberFromUrl(prevPost.url)} {prevPost.frontmatter.title}</a>
        )}
        {nextPost && (
            <a href={nextPost.url}>{getNumberFromUrl(nextPost.url)} {nextPost.frontmatter.title} →</a>
        )}
    </div>
    <div>
        <h2>{frontmatter.title}</h2>
        <div><slot /></div>
        <div class="artwork-wrapper">
            <a href={frontmatter.image} target="_blank">
                <img src={frontmatter.image}>
            </a>
            
        </div>
        <div class="artwork-pages">
            {
                frontmatter.pages?.map((page) => {
                    return (<div><a href={page} target="_blank">
                        <img src={page}>
                    </a></div>)
                })
            }
        </div>
        <div class="artwork-tags">
            {frontmatter.tags.map(
                function(tag){
               return  <a href={`/tags/${tag}/1`}>#{tag}</a>
            }
            )} 
        </div>
    </div>
</Layout>

