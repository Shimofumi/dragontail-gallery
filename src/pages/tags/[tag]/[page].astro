---
import type { MarkdownInstance, Page } from "astro";
import type { GetStaticPaths } from "astro";
import Layout from "../../../layouts/Layout.astro";
<<<<<<< Updated upstream
import path from 'path'
=======
>>>>>>> Stashed changes
import Pagination from "../../../components/Pagination.astro";

export interface Props {
  page: Page;
  posts: MarkdownInstance<Record<string, any>>[];
}

export const getStaticPaths = (({paginate}) => {
  const allPosts : MarkdownInstance<Record<string, any>>[] = Object.values(import.meta.glob("../../picture/*.md", { eager: true }));

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ] as string[];

  return uniqueTags.flatMap((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return  paginate( filteredPosts , {
      params: { tag },
      pageSize: 9 //pageSize 何作品ずつ表示するか
    });
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { page } = Astro.props;
<<<<<<< Updated upstream


const size = 3; // Current pageから前後にいくつ表示するか
const inLowerLimit = (currentPage: number, pageNumber: number) => currentPage - size + 1 <= pageNumber && pageNumber <= currentPage;
const inUpperLimit = (currentPage: number, pageNumber: number) => pageNumber <= currentPage + size - 1 && pageNumber >= currentPage;
const inRange = (currentPage: number, pageNumber: number) => inUpperLimit(currentPage, pageNumber) || inLowerLimit(currentPage, pageNumber);
=======
>>>>>>> Stashed changes
---

{ tag === undefined ? <></> : (
<Layout title={`${tag}がついたページ`}>
  <h1><span>{tag}</span>がついたページ - {page.currentPage}</h1>
  
  <div class="grid-wrapper">
    <div class="gallery-grid">
    {
    page.data.map((work) => {
    const image = work.frontmatter.image;
    const ext = path.extname(image);
    const thumbnail_basename = path.basename(image, ext);
      return (
      <p class="gallery-piece">
        <a href={work.url}>
          <img src={`/thumbnails/${thumbnail_basename}_thumb${ext}`}>
        </a>
        <span class="gallery-title">{work.frontmatter.title}</span>
      </p>
      )
    })
    }
<<<<<<< Updated upstream
    </div>
    </div>
    <Pagination page={page} path={`/tags/${tag}`} />
=======
  </ul>
  <Pagination page={page} path={`/tags/${tag}`} />
>>>>>>> Stashed changes
</Layout>
)}
